- hosts: all
  become: yes

  tasks:
    # - name: Get base playbook
    #   get_url: url=https://raw.githubusercontent.com/Sage-Bionetworks/packer-base-ubuntu-bionic/v1.0.0/src/playbook.yaml dest={{ playbook_dir }}/sagebio-base-ubuntu-bionic-v1.0.0.yaml

    # - include_tasks: sagebio-base-ubuntu-bionic-v1.0.0.yaml

    - name: Add the CRAN apt key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: E298A3A825C0D65DFD57CBB651716619E084DAB9

    - name: Add R-Project apt repository
      shell: "aptdcon --add-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu {{ ansible_distribution_release }}-cran35/' && aptdcon --refresh"

    - name: install packages
      shell: "yes | aptdcon --hide-terminal --install 'zlib1g-dev libclang-dev libssl-dev libffi-dev libcurl4-openssl-dev libapparmor1 libssl1.0.0 r-base r-base-dev libxml2-dev apache2 apache2-dev ssl-cert flex python3-boto3'"

    - name: Download RStudio Server
      get_url: url=https://download2.rstudio.org/server/bionic/amd64/rstudio-server-1.2.5033-amd64.deb dest=/tmp/rstudio.deb

    - name: Install RStudio Server
      command: dpkg -i /tmp/rstudio.deb
    
    # Compile mod_python from source becuase we want to run mod_python in a Python 3 environment. 
    # We need mod_python >= 3.5
    # Unfortunately, the mod_python provided by apt in Ubuntu 18.04
    # is an older version (mod_pthon 3.3) that only supports Python 2
    # Compiling requires: 'flex' and 'apache2-dev' from installed from apt, which should have been installed in the previous steps
    - name: Clone git repository for Apache Python Module - mod_python
      ansible.builtin.git:
        repo: 'https://github.com/grisha/mod_python.git'
        # latest commit of the master branch that I've verified compilable as of the writing of this script
        version: 88e444429ec2acd66eb51fa198b8dd6e1ef6a256
        dest: /tmp/mod_python_source

    - name: Compile and install mod_python
      shell:
        # we first need to fix the configure script. see:
        # https://github.com/grisha/mod_python/issues/81
        # https://github.com/grisha/mod_python/pull/86
        cmd: |
          sed -i 's/print(distutils.sysconfig.get_config_var("LDLIBRARY"))/print(distutils.sysconfig.get_config_var("BLDLIBRARY"))/' ./configure
          
          ./configure

          make install

          # add mod_python as an available module to enable later
          echo 'LoadModule python_module /usr/lib/apache2/modules/mod_python.so' >> /etc/apache2/mods-available/python.load
        chdir: /tmp/mod_python_source


    - name: Overwrite rstudio web config
      copy:
        dest: /etc/rstudio/rserver.conf
        content: |
          www-address=127.0.0.1  #Only serve on internal interface
          www-port=8787

    - name: Replace rstudio-server service with no auth
      copy:
        src: rstudio-server.service
        dest: /etc/systemd/system/

    - name: Add JWT and instance tag verifing script
      copy:
        src: access.py
        dest: /usr/lib/cgi-bin/access.py
        owner: www-data
        group: www-data
        mode: 0755
    
    - name: Add per-instance config script to be run on each provisioned EC2 instance after this AMI is built
      copy:
        src: set-instance-id-config-files.sh
        #  when copied to this path, `clould-init` will ensure that the script
        #  will only run once on every EC2 instance that uses the AMI we are currently building
        dest: /var/lib/cloud/scripts/per-instance/
        mode: 0755

    - name: Add config for local rev proxy to internal port
      copy:
        src: proxy.conf
        dest: /etc/apache2/sites-available/proxy.conf

    - name: Enable modules
      command: a2enmod ssl proxy proxy_http rewrite python headers

    - name: Enable proxy site
      command: a2ensite proxy

    - name: Disable default
      command: a2dissite 000-default

    # Install essential R packages
    - name: Install synapser
      # environment variable needed to communicate with the embedded python and install boto3 dependency
      shell: "SYNAPSE_PYTHON_CLIENT_EXTRAS=boto3 R -e \"install.packages('synapser', repos=c('http://ran.synapse.org', 'http://cran.fhcrc.org'))\""

    - name: Install tidyverse
      shell: "R -e \"install.packages('tidyverse')\""

    - name: Install devtools
      shell: "R -e \"install.packages('devtools')\""

    - name: Install BiocManager
      shell: "R -e \"install.packages('BiocManager')\""
