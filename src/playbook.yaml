- hosts: all
  become: true

  tasks:
    - name: Install packages
      ansible.builtin.apt:
        state: present
        update_cache: true
        pkg:
        # list from https://github.com/rstudio/rstudio/blob/main/dependencies/linux/install-dependencies-jammy
          - aptdaemon
          - ant
          - build-essential
          - clang
          - curl
          - debsigs
          - dpkg-sig
          - expect
          - fakeroot
          - gdebi-core
          - git
          - gnupg1
          - jq
          - libacl1-dev
          - libattr1-dev
          - libbz2-dev
          - libcap-dev
          - libclang-dev
          - libcurl4-openssl-dev
          - libegl1-mesa
          - libfuse2
          - libgl1-mesa-dev
          - libgtk-3-0
          - libpam-dev
          - libpango1.0-dev
          - libpq-dev
          - libsqlite3-dev
          - libssl-dev
          - libuser1-dev
          - libxslt1-dev
          - lsof
          - openjdk-8-jdk
          - openjdk-11-jdk
          - ninja-build
          - p7zip-full
          - patchelf
          - pkg-config
          - rrdtool
          - software-properties-common
          - unzip
          - uuid-dev
          - wget
          - zlib1g-dev
          - apache2
          - apache2-dev
          - flex
          - ssl-cert
          - libxml2-dev
          - libpq5
          - libffi-dev
          - libcurl4-openssl-dev
          - libapparmor1
          - libxml2-dev
          - libharfbuzz-dev
          - libfribidi-dev
          - libfreetype6-dev
          - libpng-dev
          - libtiff5-dev
          - libjpeg-dev
          - software-properties-common
          - python3
          - python3-venv
          - python3-boto3
          - python-is-python3

    # The mod_python provided by apt in Ubuntu 22.04 intermittently fails with segmentation faults.
    # mod_python is only supported from master branch at https://github.com/grisha/mod_python.git
    # Compiling requires: 'flex' and 'apache2-dev' from installed from apt, which should have been installed in the previous steps
    - name: Clone git repository for Apache Python Module - mod_python
      ansible.builtin.git:
        repo: 'https://github.com/grisha/mod_python.git'
        # latest commit of the master branch that I've verified compilable as of the writing of this script (ver 3.5.0.1)
        version: 9db86bca5106b5cf7ceca7645ec0208446c71e25
        dest: /tmp/mod_python_source

    - name: Compile and install mod_python
      shell:
        cmd: |
          ./configure

          make install

          # add mod_python as an available module to enable later
          echo 'LoadModule python_module /usr/lib/apache2/modules/mod_python.so' >> /etc/apache2/mods-available/python.load
        chdir: /tmp/mod_python_source

    # Install R (see https://docs.posit.co/resources/install-r/)
    - name: Install R 4.3.1
      shell: |
        export R_VERSION=4.3.1
        curl -O https://cdn.rstudio.com/r/ubuntu-2204/pkgs/r-${R_VERSION}_1_amd64.deb
        gdebi -n r-${R_VERSION}_1_amd64.deb
        ln -s /opt/R/${R_VERSION}/bin/R /usr/local/bin/R
        ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/local/bin/Rscript

    - name: Create directory for user R packages
      become_user: ubuntu
      file:
        path: /home/ubuntu/R/x86_64-pc-linux-gnu-library/4.3
        state: directory

    - name: Install devtools
      become_user: ubuntu
      shell: "R -e \"install.packages('devtools', repos=c('https://packagemanager.posit.co/cran/__linux__/jammy/latest'), lib=c('/home/ubuntu/R/x86_64-pc-linux-gnu-library/4.3/'))\""

    # Install reticulate first
    - name: Install reticulate 1.28
      become_user: ubuntu
      shell: "R -e \"devtools::install_version('reticulate', version='1.28', repos=c('https://packagemanager.posit.co/cran/__linux__/jammy/latest'))\""

    # Install essential R packages
    - name: Install synapser
      become_user: ubuntu
      # environment variable needed to communicate with the embedded python and install boto3 dependency
      shell: "R -e \"Sys.setenv(SYNAPSE_PYTHON_CLIENT_EXTRAS='boto3'); install.packages('synapser', repos=c('http://ran.synapse.org', 'http://cran.fhcrc.org'), Ncpus = 2, lib=c('/home/ubuntu/R/x86_64-pc-linux-gnu-library/4.3/'))\""

    - name: Install tidyverse
      become_user: ubuntu
      shell: "R -e \"install.packages('tidyverse', repos=c('https://packagemanager.posit.co/cran/__linux__/jammy/latest'), lib=c('/home/ubuntu/R/x86_64-pc-linux-gnu-library/4.3/'))\""

    - name: Install BiocManager
      become_user: ubuntu
      shell: "R -e \"install.packages('BiocManager', repos=c('https://packagemanager.posit.co/cran/__linux__/jammy/latest'), lib=c('/home/ubuntu/R/x86_64-pc-linux-gnu-library/4.3/'))\""

    - name: Install arrow
      become_user: ubuntu
      shell: "R -e \"install.packages('arrow', repos=c('https://packagemanager.posit.co/cran/__linux__/jammy/latest'), lib=c('/home/ubuntu/R/x86_64-pc-linux-gnu-library/4.3/'))\""

    - name: Create directory for the following step
      file:
        path: /etc/systemd/system.conf.d
        state: directory

    - name: Update file access limits for all processes
      copy:
        dest: /etc/systemd/system.conf.d/60-DefaultLimitNOFILE.conf
        content: |
          [Manager]
          DefaultLimitNOFILE=1000000

    - name: Download RStudio Server
      get_url: url=https://s3.amazonaws.com/rstudio-ide-build/server/jammy/amd64/rstudio-server-2023.06.1-524-amd64.deb dest=/tmp/rstudio.deb

    - name: Install RStudio Server
      shell: |
        export DEBIAN_FRONTEND=noninteractive
        dpkg -i /tmp/rstudio.deb

    - name: Overwrite rstudio web config
      copy:
        dest: /etc/rstudio/rserver.conf
        content: |
          www-address=127.0.0.1  #Only serve on internal interface
          www-port=8787

    - name: Replace rstudio-server service with no auth
      copy:
        src: rstudio-server.service
        dest: /etc/systemd/system/

    - name: Add JWT and instance tag verifying script
      copy:
        src: access.py
        dest: /usr/lib/cgi-bin/access.py
        owner: www-data
        group: www-data
        mode: 0755

    - name: Add config for local rev proxy to internal port
      copy:
        src: proxy.conf
        dest: /etc/apache2/sites-available/proxy.conf

    - name: Enable modules
      command: a2enmod ssl proxy proxy_http proxy_wstunnel rewrite python headers

    - name: Enable proxy site
      command: a2ensite proxy

    - name: Disable default
      command: a2dissite 000-default
